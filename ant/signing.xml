<project name="signing-helpers" basedir="../">
    <property file="ant/project.properties"/>

    <!-- Custom code-signing properties -->
    <property file="${basedir}/../private/private.properties"/>

    <!-- Fallback code-signing properties -->
    <property file="ant/private/private.properties"/>

    <!-- Locate first jsign-x.x.x.jar sorted name desc -->
    <target name="find-jsign">
        <sort id="jsign.sorted">
            <fileset dir="${basedir}/ant/lib/">
                <include name="jsign*.jar"/>
            </fileset>
            <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators"/>
        </sort>
        <first id="jsign.first">
            <resources refid="jsign.sorted"/>
        </first>
        <pathconvert property="jsign.path" refid="jsign.first">
            <identitymapper/>
        </pathconvert>

        <echo message="Found jsign: ${jsign.path}"/>
    </target>

    <!-- File signing via hsm with timestamp -->
    <target name="sign-file-hsm" if="hsm.storetype" depends="find-jsign">
        <property description="suppress property warning" name="sign.file" value="something went wrong"/>

        <!-- Handle quoting via backwards-compatible shim (for cherry-pick) -->
        <condition property="sign.file.quoted" value="&quot;${sign.file}&quot;">
            <contains string="${sign.file}" substring="&quot;"/>
        </condition>
        <property description="fallback value" name="sign.file.quoted" value="${sign.file}"/>

        <property description="suppress property warning" name="hsm.storetype" value="something went wrong"/>
        <echo level="info">Signing with hsm: ${hsm.keystore}</echo>
        <java jar="${jsign.path}" fork="true" failonerror="true">
            <arg value="--name"/>
            <arg value="${project.name}"/>
            <arg value="--url"/>
            <arg value="${vendor.website}"/>
            <arg value="--replace"/>
            <arg value="--alg"/>
            <arg value="${hsm.algorithm}"/>
            <arg value="--storetype"/>
            <arg value="${hsm.storetype}"/>
            <arg value="--keystore"/>
            <arg value="${hsm.keystore}"/>
            <arg value="--alias"/>
            <arg value="${hsm.alias}"/>
            <arg value="--storepass"/>
            <arg value="${hsm.storepass}"/>
            <arg value="--tsaurl"/>
            <arg value="${hsm.tsaurl}"/>
            <arg value="--certfile"/>
            <arg value="${hsm.certfile}"/>
            <arg line="${sign.file.quoted}"/>
        </java>
    </target>

    <target name="sign-jar">
        <antcall target="sign-jar-tsa">
            <param name="sign.jar.file" value="${sign.jar.file}"/>
        </antcall>
        <antcall target="sign-jar-self">
            <param name="sign.jar.file" value="${sign.jar.file}"/>
        </antcall>
    </target>

    <target name="sign-jar-tsa" if="signing.tsaurl">
        <echo level="info">Signing jar with timestamp: ${sign.jar.file}</echo>
        <signjar jar="${sign.jar.file}"
                 signedjar="${sign.jar.file}"
                 alias="${signing.alias}"
                 storepass="${signing.storepass}"
                 keystore="${signing.keystore}"
                 keypass="${signing.keypass}"
                 tsaurl="${signing.tsaurl}"
        />
    </target>

    <target name="sign-jar-self" unless="signing.tsaurl">
        <echo level="info">Self-signing jar without timestamp: ${sign.jar.file}</echo>
        <tsa-warning/>
        <signjar jar="${sign.jar.file}"
                 signedjar="${sign.jar.file}"
                 alias="${signing.alias}"
                 storepass="${signing.storepass}"
                 keystore="${signing.keystore}"
                 keypass="${signing.keypass}"
        />
    </target>

    <macrodef name="tsa-warning">
        <sequential>
            <echo level="warn">
                No tsaurl was provided so the file was not timestamped. Users will not be able to validate
                this file after the signer certificate's expiration date or after any future revocation date.
            </echo>
        </sequential>
    </macrodef>
</project>