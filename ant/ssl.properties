# Platform-independent info used at install time for wss:// signing
# Values prefixed with an !exclamation-mark can't be determined until install time
ssl.cn=localhost
ssl.cnalt=localhost.qz.io
ssl.city=Canastota
ssl.state=NY
ssl.country=US
ssl.company=QZ Industries\\\\, LLC
ssl.validity=7305

ssl.dname=\\"CN=${ssl.cn}, EMAILADDRESS=${vendor.email}, OU=${ssl.company}, O=${ssl.company}, L=${ssl.city}, S=${ssl.state}, C=${ssl.country}\\"
ssl.properties=!install/${project.filename}.properties
ssl.host=0.0.0.0
ssl.passlength=10

ca.jks=!install/auth/root-ca.jks
ca.crt=!install/auth/root-ca.crt
ca.alias=root-ca
ca.jkscmd=\\"keytool\\" -genkeypair -noprompt -alias ${ca.alias} -keyalg RSA -keysize 2048 -dname ${ssl.dname} -validity ${ssl.validity} -keystore \\"${ca.jks}\\" -keypass !keypass -storepass !storepass -ext ku:critical=cRLSign,keyCertSign -ext bc:critical=ca:true,pathlen:1
ca.crtcmd=\\"keytool\\" -exportcert -alias root-ca -keystore \\"${ca.jks}\\" -keypass !keypass -storepass !storepass -file \\"${ca.crt}\\" -rfc -ext ku:critical=cRLSign,keyCertSign -ext bc:critical=ca:true,pathlen:1

ssl.jks=!install/auth/${project.filename}.jks
ssl.crt=!install/auth/${project.filename}.crt
ssl.csr=!install/auth/${project.filename}.csr
ssl.alias=${project.filename}
ssl.jkscmd=\\"keytool\\" -genkeypair -noprompt -alias ${ssl.alias} -keyalg RSA -keysize 2048 -dname ${ssl.dname} -validity ${ssl.validity} -keystore \\"${ssl.jks}\\" -storepass !storepass -keypass !keypass -ext ku:critical=digitalSignature,keyEncipherment -ext eku=serverAuth,clientAuth -ext san=dns:${ssl.cn},dns:${ssl.cnalt} -ext bc:critical=ca:false
ssl.jkscsr=\\"keytool\\" -certreq -keyalg RSA -alias ${ssl.alias} -file \\"${ssl.csr}\\" -keystore \\"${ssl.jks}\\" -keypass !keypass -storepass !storepass
ssl.crtcmd=\\"keytool\\" -keypass !keypass -storepass !storepass -validity ${ssl.validity} -keystore \\"${ca.jks}\\" -gencert -alias ${ca.alias} -infile \\"${ssl.csr}\\" -ext ku:critical=digitalSignature,keyEncipherment -ext eku=serverAuth,clientAuth -ext san=dns:${ssl.cn},dns:${ssl.cnalt} -ext bc:critical=ca:false -rfc -outfile \\"${ssl.crt}\\"
ssl.importca=\\"keytool\\" -noprompt -import -trustcacerts -alias ${ca.alias} -file \\"${ca.crt}\\" -keystore \\"${ssl.jks}\\" -keypass !keypass -storepass !storepass
ssl.importssl=\\"keytool\\" -noprompt -import -trustcacerts -alias ${ssl.alias} -file \\"${ssl.crt}\\" -keystore \\"${ssl.jks}\\" -keypass !keypass -storepass !storepass

firefoxconfig.name=firefox-config.cfg
firefoxconfig.in=${basedir}/ant/firefox/${firefoxconfig.name}.in
firefoxconfig.out=${dist.dir}/auth/firefox/${firefoxconfig.name}
firefoxconfig.install=!install/auth/firefox/${firefoxconfig.name}

firefoxprefs.name=firefox-prefs.js
firefoxprefs.in=${basedir}/ant/firefox/${firefoxprefs.name}.in
firefoxprefs.out=${dist.dir}/auth/firefox/${firefoxprefs.name}
firefoxprefs.install=!install/auth/firefox/${firefoxprefs.name}

firefoxcert.name=firefox-cert.sh
firefoxcert.in=${basedir}/ant/firefox/${firefoxcert.name}.in
firefoxcert.out=${dist.dir}/auth/firefox/${firefoxcert.name}

locator.name=locator.sh
locator.in=${basedir}/ant/firefox/${locator.name}.in
locator.out=${dist.dir}/auth/firefox/${locator.name}

jsonwriter.name=firefox-json-writer.py
jsonwriter.in=${basedir}/ant/firefox/${jsonwriter.name}
jsonwriter.out=${dist.dir}/auth/firefox/${jsonwriter.name}

# Trusted SSL installs only
trusted.crt=!sslcert
trusted.jks=!sslkey
trusted.keypair=!install/auth/${project.filename}.p12
trusted.command=openssl pkcs12 -export -in \\"${trusted.crt}\\" -inkey \\"${trusted.jks}\\" -out \\"${trusted.keypair}\\" -name ${ssl.alias} -passout pass:!keypass
trusted.convert=\\"keytool\\" -importkeystore -deststorepass !storepass -destkeypass !keypass -destkeystore \\"${ssl.jks}\\" -srckeystore \\"${trusted.keypair}\\" -srcstoretype PKCS12 -srcstorepass !storepass -alias ${ssl.alias}
